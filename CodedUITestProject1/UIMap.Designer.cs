// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject1
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Banking Transactions
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WinEdit uITxtAccountNoEdit = this.UILoginFormWindow.UITxtAccountNoWindow.UITxtAccountNoEdit;
            WinEdit uITxtpinEdit = this.UILoginFormWindow.UITxtpinWindow.UITxtpinEdit;
            WinWindow uIAccountNoWindow = this.UILoginFormWindow.UILoginGroup.UIAccountNoWindow;
            WinButton uILoginButton = this.UILoginFormWindow.UILoginWindow.UILoginButton;
            WinButton uIBalanceInqButton = this.UIMainmenuWindow.UIBalanceInqWindow.UIBalanceInqButton;
            WinButton uIOKButton = this.UIReceiptWindow.UIOKWindow.UIOKButton;
            WinControl uIContinueDialog = this.UIContinueWindow.UIContinueDialog;
            WinWindow uIItem210Window = this.UIMainmenuWindow.UIMainmenuClient.UIItem210Window;
            WinEdit uITxtamountEdit = this.UIDepositWindow.UITxtamountWindow.UITxtamountEdit;
            WinButton uIOKButton1 = this.UIDepositWindow.UIOKWindow.UIOKButton;
            WinButton uIWithdrawButton = this.UIMainmenuWindow.UIWithdrawWindow.UIWithdrawButton;
            WinEdit uITxtamountEdit1 = this.UIWithdrawWindow.UITxtamountWindow.UITxtamountEdit;
            WinButton uIOKButton2 = this.UIWithdrawWindow.UIOKWindow.UIOKButton;
            WinWindow uIBalanceInqWindow = this.UIMainmenuWindow.UITransactionGroup.UIBalanceInqWindow;
            WinEdit uITxtaccount2Edit = this.UITransferWindow.UITxtaccount2Window.UITxtaccount2Edit;
            WinWindow uITxtamountWindow = this.UITransferWindow.UITransferClient.UITxtamountWindow;
            WinEdit uITxtamountEdit2 = this.UITransferWindow.UITxtamountWindow.UITxtamountEdit;
            WinButton uIOKButton3 = this.UITransferWindow.UIOKWindow.UIOKButton;
            WinGroup uILoginGroup = this.UILoginFormWindow.UILoginWindow1.UILoginGroup;
            WinClient uIReceiptClient = this.UIReceiptWindow.UIReceiptClient;
            WinHyperlink uIRegisterHyperlink = this.UILoginFormWindow.UIRegisterText.UIRegisterHyperlink;
            WinEdit uITxtAcctNoEdit = this.UIRegistrationFormWindow.UITxtAcctNoWindow.UITxtAcctNoEdit;
            WinEdit uITxtPincodeEdit = this.UIRegistrationFormWindow.UITxtPincodeWindow.UITxtPincodeEdit;
            WinEdit uITxtAccountNameEdit = this.UIRegistrationFormWindow.UITxtAccountNameWindow.UITxtAccountNameEdit;
            WinWindow uIAccountInfoWindow = this.UIRegistrationFormWindow.UIRegistrationFormClient.UIAccountInfoWindow;
            WinButton uICancelButton = this.UIRegistrationFormWindow.UICancelWindow.UICancelButton;
            #endregion

            // Last mouse action was not recorded.

            // Type '210' in 'txtAccountNo' text box
            uITxtAccountNoEdit.Text = this.RecordedMethod1Params.UITxtAccountNoEditText;

            // Click 'txtpin' text box
            Mouse.Click(uITxtpinEdit, new Point(72, 11));

            // Click 'txtpin' text box
            Mouse.Click(uITxtpinEdit, new Point(72, 11));

            // Click 'txtpin' text box
            Mouse.Click(uITxtpinEdit, new Point(32, 10));

            // Type '********' in 'txtpin' text box
            Keyboard.SendKeys(uITxtpinEdit, this.RecordedMethod1Params.UITxtpinEditSendKeys, true);

            // Click 'Account No.' window
            Mouse.Click(uIAccountNoWindow, new Point(212, 98));

            // Click 'Login' button
            Mouse.Click(uILoginButton, new Point(41, 32));

            // Click 'Balance Inq.' button
            Mouse.Click(uIBalanceInqButton, new Point(90, 28));

            // Click 'Ok' button
            Mouse.Click(uIOKButton, new Point(53, 32));

            // Click 'Continue' Dialog
            Mouse.Click(uIContinueDialog, new Point(25, 10));

            // Click '210' window
            Mouse.Click(uIItem210Window, new Point(181, 91));

            // Type '10' in 'txtamount' text box
            uITxtamountEdit.Text = this.RecordedMethod1Params.UITxtamountEditText;

            // Click 'Ok' button
            Mouse.Click(uIOKButton1, new Point(50, 35));

            // Click 'Ok' button
            Mouse.Click(uIOKButton1, new Point(57, 30));

            // Click 'Account No.' window
            Mouse.Click(uIAccountNoWindow, new Point(196, 94));

            // Click 'Login' button
            Mouse.Click(uILoginButton, new Point(23, 31));

            // Click 'Withdraw' button
            Mouse.Click(uIWithdrawButton, new Point(92, 22));

            // Type '10' in 'txtamount' text box
            uITxtamountEdit1.Text = this.RecordedMethod1Params.UITxtamountEditText1;

            // Click 'Ok' button
            Mouse.Click(uIOKButton2, new Point(32, 29));

            // Click 'Ok' button
            Mouse.Click(uIOKButton2, new Point(53, 30));

            // Click 'Login' button
            Mouse.Click(uILoginButton, new Point(20, 12));

            // Click 'Login' button
            Mouse.Click(uILoginButton, new Point(21, 23));

            // Click 'Balance Inq.' window
            Mouse.Click(uIBalanceInqWindow, new Point(275, 117));

            // Type '10' in 'txtaccount2' text box
            uITxtaccount2Edit.Text = this.RecordedMethod1Params.UITxtaccount2EditText;

            // Click 'txtamount' window
            Mouse.Click(uITxtamountWindow, new Point(80, 25));

            // Type '10' in 'txtamount' text box
            uITxtamountEdit2.Text = this.RecordedMethod1Params.UITxtamountEditText2;

            // Click 'Ok' button
            Mouse.Click(uIOKButton3, new Point(49, 18));

            // Click 'Ok' button
            Mouse.Click(uIOKButton3, new Point(65, 36));

            // Click 'Login' button
            Mouse.Click(uILoginButton, new Point(31, 3));

            // Click 'Login' group
            Mouse.Click(uILoginGroup, new Point(245, 168));

            // Click 'Balance Inq.' button
            Mouse.Click(uIBalanceInqButton, new Point(88, 37));

            // Click 'Ok' button
            Mouse.Click(uIOKButton, new Point(42, 28));

            // Click 'Continue' Dialog
            Mouse.Click(uIContinueDialog, new Point(132, 20));

            // Click 'Receipt' client
            Mouse.Click(uIReceiptClient, new Point(223, 219));

            // Click 'Register' link
            Mouse.Click(uIRegisterHyperlink, new Point(28, 2));

            // Type '100' in 'txtAcctNo' text box
            uITxtAcctNoEdit.Text = this.RecordedMethod1Params.UITxtAcctNoEditText;

            // Type 'sample' in 'txtPincode' text box
            uITxtPincodeEdit.Text = this.RecordedMethod1Params.UITxtPincodeEditText;

            // Type 'sample sample' in 'txtAccountName' text box
            uITxtAccountNameEdit.Text = this.RecordedMethod1Params.UITxtAccountNameEditText;

            // Click 'AccountInfo' window
            Mouse.Click(uIAccountInfoWindow, new Point(214, 157));

            // Click 'Cancel' button
            Mouse.Click(uICancelButton, new Point(29, 22));

            // Click 'AccountInfo' window
            Mouse.Click(uIAccountInfoWindow, new Point(310, 150));

            // Move 'Login' group
            Mouse.StartDragging(uILoginGroup, new Point(234, 53));
            Mouse.StopDragging(uILoginGroup, -165, 8);

            // Type '100' in 'txtAccountNo' text box
            uITxtAccountNoEdit.Text = this.RecordedMethod1Params.UITxtAccountNoEditText1;

            // Type '{Tab}' in 'txtAccountNo' text box
            Keyboard.SendKeys(uITxtAccountNoEdit, this.RecordedMethod1Params.UITxtAccountNoEditSendKeys, ModifierKeys.None);

            // Move 'txtpin' text box
            Mouse.StartDragging(uITxtpinEdit, new Point(150, 22));
            Mouse.StopDragging(uITxtpinEdit, -257, -2);

            // Type '********' in 'txtpin' text box
            Keyboard.SendKeys(uITxtpinEdit, this.RecordedMethod1Params.UITxtpinEditSendKeys1, true);

            // Click 'Login' button
            Mouse.Click(uILoginButton, new Point(67, 5));

            // Click 'Login' button
            Mouse.Click(uILoginButton, new Point(39, 31));
        }
        
        #region Properties
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public UILoginFormWindow UILoginFormWindow
        {
            get
            {
                if ((this.mUILoginFormWindow == null))
                {
                    this.mUILoginFormWindow = new UILoginFormWindow();
                }
                return this.mUILoginFormWindow;
            }
        }
        
        public UIMainmenuWindow UIMainmenuWindow
        {
            get
            {
                if ((this.mUIMainmenuWindow == null))
                {
                    this.mUIMainmenuWindow = new UIMainmenuWindow();
                }
                return this.mUIMainmenuWindow;
            }
        }
        
        public UIReceiptWindow UIReceiptWindow
        {
            get
            {
                if ((this.mUIReceiptWindow == null))
                {
                    this.mUIReceiptWindow = new UIReceiptWindow();
                }
                return this.mUIReceiptWindow;
            }
        }
        
        public UIContinueWindow UIContinueWindow
        {
            get
            {
                if ((this.mUIContinueWindow == null))
                {
                    this.mUIContinueWindow = new UIContinueWindow();
                }
                return this.mUIContinueWindow;
            }
        }
        
        public UIDepositWindow UIDepositWindow
        {
            get
            {
                if ((this.mUIDepositWindow == null))
                {
                    this.mUIDepositWindow = new UIDepositWindow();
                }
                return this.mUIDepositWindow;
            }
        }
        
        public UIWithdrawWindow1 UIWithdrawWindow
        {
            get
            {
                if ((this.mUIWithdrawWindow == null))
                {
                    this.mUIWithdrawWindow = new UIWithdrawWindow1();
                }
                return this.mUIWithdrawWindow;
            }
        }
        
        public UITransferWindow UITransferWindow
        {
            get
            {
                if ((this.mUITransferWindow == null))
                {
                    this.mUITransferWindow = new UITransferWindow();
                }
                return this.mUITransferWindow;
            }
        }
        
        public UIRegistrationFormWindow UIRegistrationFormWindow
        {
            get
            {
                if ((this.mUIRegistrationFormWindow == null))
                {
                    this.mUIRegistrationFormWindow = new UIRegistrationFormWindow();
                }
                return this.mUIRegistrationFormWindow;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private UILoginFormWindow mUILoginFormWindow;
        
        private UIMainmenuWindow mUIMainmenuWindow;
        
        private UIReceiptWindow mUIReceiptWindow;
        
        private UIContinueWindow mUIContinueWindow;
        
        private UIDepositWindow mUIDepositWindow;
        
        private UIWithdrawWindow1 mUIWithdrawWindow;
        
        private UITransferWindow mUITransferWindow;
        
        private UIRegistrationFormWindow mUIRegistrationFormWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Type '210' in 'txtAccountNo' text box
        /// </summary>
        public string UITxtAccountNoEditText = "210";
        
        /// <summary>
        /// Type '********' in 'txtpin' text box
        /// </summary>
        public string UITxtpinEditSendKeys = "8tFGx793Y9iim/TzKVKIROOoXgfHt9eV";
        
        /// <summary>
        /// Type '10' in 'txtamount' text box
        /// </summary>
        public string UITxtamountEditText = "10";
        
        /// <summary>
        /// Type '10' in 'txtamount' text box
        /// </summary>
        public string UITxtamountEditText1 = "10";
        
        /// <summary>
        /// Type '10' in 'txtaccount2' text box
        /// </summary>
        public string UITxtaccount2EditText = "10";
        
        /// <summary>
        /// Type '10' in 'txtamount' text box
        /// </summary>
        public string UITxtamountEditText2 = "10";
        
        /// <summary>
        /// Type '100' in 'txtAcctNo' text box
        /// </summary>
        public string UITxtAcctNoEditText = "100";
        
        /// <summary>
        /// Type 'sample' in 'txtPincode' text box
        /// </summary>
        public string UITxtPincodeEditText = "sample";
        
        /// <summary>
        /// Type 'sample sample' in 'txtAccountName' text box
        /// </summary>
        public string UITxtAccountNameEditText = "sample sample";
        
        /// <summary>
        /// Type '100' in 'txtAccountNo' text box
        /// </summary>
        public string UITxtAccountNoEditText1 = "100";
        
        /// <summary>
        /// Type '{Tab}' in 'txtAccountNo' text box
        /// </summary>
        public string UITxtAccountNoEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'txtpin' text box
        /// </summary>
        public string UITxtpinEditSendKeys1 = "8tFGx793Y9iim/TzKVKIROOoXgfHt9eV";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UILoginFormWindow : WinWindow
    {
        
        public UILoginFormWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Login Form";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Login Form");
            #endregion
        }
        
        #region Properties
        public UITxtAccountNoWindow UITxtAccountNoWindow
        {
            get
            {
                if ((this.mUITxtAccountNoWindow == null))
                {
                    this.mUITxtAccountNoWindow = new UITxtAccountNoWindow(this);
                }
                return this.mUITxtAccountNoWindow;
            }
        }
        
        public UITxtpinWindow UITxtpinWindow
        {
            get
            {
                if ((this.mUITxtpinWindow == null))
                {
                    this.mUITxtpinWindow = new UITxtpinWindow(this);
                }
                return this.mUITxtpinWindow;
            }
        }
        
        public UILoginGroup UILoginGroup
        {
            get
            {
                if ((this.mUILoginGroup == null))
                {
                    this.mUILoginGroup = new UILoginGroup(this);
                }
                return this.mUILoginGroup;
            }
        }
        
        public UILoginWindow UILoginWindow
        {
            get
            {
                if ((this.mUILoginWindow == null))
                {
                    this.mUILoginWindow = new UILoginWindow(this);
                }
                return this.mUILoginWindow;
            }
        }
        
        public UILoginWindow1 UILoginWindow1
        {
            get
            {
                if ((this.mUILoginWindow1 == null))
                {
                    this.mUILoginWindow1 = new UILoginWindow1(this);
                }
                return this.mUILoginWindow1;
            }
        }
        
        public UIRegisterText UIRegisterText
        {
            get
            {
                if ((this.mUIRegisterText == null))
                {
                    this.mUIRegisterText = new UIRegisterText(this);
                }
                return this.mUIRegisterText;
            }
        }
        #endregion
        
        #region Fields
        private UITxtAccountNoWindow mUITxtAccountNoWindow;
        
        private UITxtpinWindow mUITxtpinWindow;
        
        private UILoginGroup mUILoginGroup;
        
        private UILoginWindow mUILoginWindow;
        
        private UILoginWindow1 mUILoginWindow1;
        
        private UIRegisterText mUIRegisterText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITxtAccountNoWindow : WinWindow
    {
        
        public UITxtAccountNoWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtAccountNo";
            this.WindowTitles.Add("Login Form");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtAccountNoEdit
        {
            get
            {
                if ((this.mUITxtAccountNoEdit == null))
                {
                    this.mUITxtAccountNoEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtAccountNoEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Account No.";
                    this.mUITxtAccountNoEdit.WindowTitles.Add("Login Form");
                    #endregion
                }
                return this.mUITxtAccountNoEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtAccountNoEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITxtpinWindow : WinWindow
    {
        
        public UITxtpinWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtpin";
            this.WindowTitles.Add("Login Form");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtpinEdit
        {
            get
            {
                if ((this.mUITxtpinEdit == null))
                {
                    this.mUITxtpinEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtpinEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Register";
                    this.mUITxtpinEdit.WindowTitles.Add("Login Form");
                    #endregion
                }
                return this.mUITxtpinEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtpinEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UILoginGroup : WinGroup
    {
        
        public UILoginGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Login";
            this.WindowTitles.Add("Login Form");
            #endregion
        }
        
        #region Properties
        public WinWindow UIAccountNoWindow
        {
            get
            {
                if ((this.mUIAccountNoWindow == null))
                {
                    this.mUIAccountNoWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUIAccountNoWindow.SearchProperties[WinWindow.PropertyNames.Name] = "Account No.";
                    this.mUIAccountNoWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.STATIC", PropertyExpressionOperator.Contains));
                    this.mUIAccountNoWindow.WindowTitles.Add("Login Form");
                    #endregion
                }
                return this.mUIAccountNoWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUIAccountNoWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UILoginWindow : WinWindow
    {
        
        public UILoginWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnlogin";
            this.WindowTitles.Add("Login Form");
            #endregion
        }
        
        #region Properties
        public WinButton UILoginButton
        {
            get
            {
                if ((this.mUILoginButton == null))
                {
                    this.mUILoginButton = new WinButton(this);
                    #region Search Criteria
                    this.mUILoginButton.SearchProperties[WinButton.PropertyNames.Name] = "Login";
                    this.mUILoginButton.WindowTitles.Add("Login Form");
                    #endregion
                }
                return this.mUILoginButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUILoginButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UILoginWindow1 : WinWindow
    {
        
        public UILoginWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "GroupBox1";
            this.WindowTitles.Add("Login Form");
            #endregion
        }
        
        #region Properties
        public WinGroup UILoginGroup
        {
            get
            {
                if ((this.mUILoginGroup == null))
                {
                    this.mUILoginGroup = new WinGroup(this);
                    #region Search Criteria
                    this.mUILoginGroup.SearchProperties[WinControl.PropertyNames.Name] = "Login";
                    this.mUILoginGroup.WindowTitles.Add("Login Form");
                    #endregion
                }
                return this.mUILoginGroup;
            }
        }
        #endregion
        
        #region Fields
        private WinGroup mUILoginGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIRegisterText : WinText
    {
        
        public UIRegisterText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinText.PropertyNames.Name] = "Register";
            this.WindowTitles.Add("Login Form");
            #endregion
        }
        
        #region Properties
        public WinHyperlink UIRegisterHyperlink
        {
            get
            {
                if ((this.mUIRegisterHyperlink == null))
                {
                    this.mUIRegisterHyperlink = new WinHyperlink(this);
                    #region Search Criteria
                    this.mUIRegisterHyperlink.SearchProperties[WinHyperlink.PropertyNames.Name] = "Register";
                    this.mUIRegisterHyperlink.WindowTitles.Add("Login Form");
                    #endregion
                }
                return this.mUIRegisterHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private WinHyperlink mUIRegisterHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIMainmenuWindow : WinWindow
    {
        
        public UIMainmenuWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Mainmenu";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Mainmenu");
            #endregion
        }
        
        #region Properties
        public UIBalanceInqWindow UIBalanceInqWindow
        {
            get
            {
                if ((this.mUIBalanceInqWindow == null))
                {
                    this.mUIBalanceInqWindow = new UIBalanceInqWindow(this);
                }
                return this.mUIBalanceInqWindow;
            }
        }
        
        public UIMainmenuClient UIMainmenuClient
        {
            get
            {
                if ((this.mUIMainmenuClient == null))
                {
                    this.mUIMainmenuClient = new UIMainmenuClient(this);
                }
                return this.mUIMainmenuClient;
            }
        }
        
        public UIWithdrawWindow UIWithdrawWindow
        {
            get
            {
                if ((this.mUIWithdrawWindow == null))
                {
                    this.mUIWithdrawWindow = new UIWithdrawWindow(this);
                }
                return this.mUIWithdrawWindow;
            }
        }
        
        public UITransactionGroup UITransactionGroup
        {
            get
            {
                if ((this.mUITransactionGroup == null))
                {
                    this.mUITransactionGroup = new UITransactionGroup(this);
                }
                return this.mUITransactionGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIBalanceInqWindow mUIBalanceInqWindow;
        
        private UIMainmenuClient mUIMainmenuClient;
        
        private UIWithdrawWindow mUIWithdrawWindow;
        
        private UITransactionGroup mUITransactionGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIBalanceInqWindow : WinWindow
    {
        
        public UIBalanceInqWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "Button1";
            this.WindowTitles.Add("Mainmenu");
            #endregion
        }
        
        #region Properties
        public WinButton UIBalanceInqButton
        {
            get
            {
                if ((this.mUIBalanceInqButton == null))
                {
                    this.mUIBalanceInqButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIBalanceInqButton.SearchProperties[WinButton.PropertyNames.Name] = "Balance Inq.";
                    this.mUIBalanceInqButton.WindowTitles.Add("Mainmenu");
                    #endregion
                }
                return this.mUIBalanceInqButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIBalanceInqButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIMainmenuClient : WinClient
    {
        
        public UIMainmenuClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Mainmenu";
            this.WindowTitles.Add("Mainmenu");
            #endregion
        }
        
        #region Properties
        public WinWindow UIItem210Window
        {
            get
            {
                if ((this.mUIItem210Window == null))
                {
                    this.mUIItem210Window = new WinWindow(this);
                    #region Search Criteria
                    this.mUIItem210Window.SearchProperties[WinWindow.PropertyNames.Name] = "210";
                    this.mUIItem210Window.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.STATIC", PropertyExpressionOperator.Contains));
                    this.mUIItem210Window.WindowTitles.Add("Mainmenu");
                    #endregion
                }
                return this.mUIItem210Window;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUIItem210Window;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIWithdrawWindow : WinWindow
    {
        
        public UIWithdrawWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnwith";
            this.WindowTitles.Add("Mainmenu");
            #endregion
        }
        
        #region Properties
        public WinButton UIWithdrawButton
        {
            get
            {
                if ((this.mUIWithdrawButton == null))
                {
                    this.mUIWithdrawButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIWithdrawButton.SearchProperties[WinButton.PropertyNames.Name] = "Withdraw";
                    this.mUIWithdrawButton.WindowTitles.Add("Mainmenu");
                    #endregion
                }
                return this.mUIWithdrawButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIWithdrawButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITransactionGroup : WinGroup
    {
        
        public UITransactionGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Transaction";
            this.WindowTitles.Add("Mainmenu");
            #endregion
        }
        
        #region Properties
        public WinWindow UIBalanceInqWindow
        {
            get
            {
                if ((this.mUIBalanceInqWindow == null))
                {
                    this.mUIBalanceInqWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUIBalanceInqWindow.SearchProperties[WinWindow.PropertyNames.Name] = "Balance Inq.";
                    this.mUIBalanceInqWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.BUTTON", PropertyExpressionOperator.Contains));
                    this.mUIBalanceInqWindow.WindowTitles.Add("Mainmenu");
                    #endregion
                }
                return this.mUIBalanceInqWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUIBalanceInqWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIReceiptWindow : WinWindow
    {
        
        public UIReceiptWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Receipt";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Receipt");
            #endregion
        }
        
        #region Properties
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        
        public WinClient UIReceiptClient
        {
            get
            {
                if ((this.mUIReceiptClient == null))
                {
                    this.mUIReceiptClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIReceiptClient.SearchProperties[WinControl.PropertyNames.Name] = "Receipt";
                    this.mUIReceiptClient.WindowTitles.Add("Receipt");
                    #endregion
                }
                return this.mUIReceiptClient;
            }
        }
        #endregion
        
        #region Fields
        private UIOKWindow mUIOKWindow;
        
        private WinClient mUIReceiptClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "Button1";
            this.WindowTitles.Add("Receipt");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "Ok";
                    this.mUIOKButton.WindowTitles.Add("Receipt");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIContinueWindow : WinWindow
    {
        
        public UIContinueWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Continue";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Continue");
            #endregion
        }
        
        #region Properties
        public WinControl UIContinueDialog
        {
            get
            {
                if ((this.mUIContinueDialog == null))
                {
                    this.mUIContinueDialog = new WinControl(this);
                    #region Search Criteria
                    this.mUIContinueDialog.SearchProperties[UITestControl.PropertyNames.Name] = "Continue";
                    this.mUIContinueDialog.SearchProperties[UITestControl.PropertyNames.ControlType] = "Dialog";
                    this.mUIContinueDialog.WindowTitles.Add("Continue");
                    #endregion
                }
                return this.mUIContinueDialog;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIContinueDialog;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIDepositWindow : WinWindow
    {
        
        public UIDepositWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Deposit";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Deposit");
            #endregion
        }
        
        #region Properties
        public UITxtamountWindow UITxtamountWindow
        {
            get
            {
                if ((this.mUITxtamountWindow == null))
                {
                    this.mUITxtamountWindow = new UITxtamountWindow(this);
                }
                return this.mUITxtamountWindow;
            }
        }
        
        public UIOKWindow1 UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow1(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITxtamountWindow mUITxtamountWindow;
        
        private UIOKWindow1 mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITxtamountWindow : WinWindow
    {
        
        public UITxtamountWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtamount";
            this.WindowTitles.Add("Deposit");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtamountEdit
        {
            get
            {
                if ((this.mUITxtamountEdit == null))
                {
                    this.mUITxtamountEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtamountEdit.SearchProperties[WinEdit.PropertyNames.Name] = "210";
                    this.mUITxtamountEdit.WindowTitles.Add("Deposit");
                    #endregion
                }
                return this.mUITxtamountEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtamountEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIOKWindow1 : WinWindow
    {
        
        public UIOKWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnok";
            this.WindowTitles.Add("Deposit");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "Ok";
                    this.mUIOKButton.WindowTitles.Add("Deposit");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIWithdrawWindow1 : WinWindow
    {
        
        public UIWithdrawWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Withdraw";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Withdraw");
            #endregion
        }
        
        #region Properties
        public UITxtamountWindow1 UITxtamountWindow
        {
            get
            {
                if ((this.mUITxtamountWindow == null))
                {
                    this.mUITxtamountWindow = new UITxtamountWindow1(this);
                }
                return this.mUITxtamountWindow;
            }
        }
        
        public UIOKWindow2 UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow2(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITxtamountWindow1 mUITxtamountWindow;
        
        private UIOKWindow2 mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITxtamountWindow1 : WinWindow
    {
        
        public UITxtamountWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtamount";
            this.WindowTitles.Add("Withdraw");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtamountEdit
        {
            get
            {
                if ((this.mUITxtamountEdit == null))
                {
                    this.mUITxtamountEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtamountEdit.SearchProperties[WinEdit.PropertyNames.Name] = "210";
                    this.mUITxtamountEdit.WindowTitles.Add("Withdraw");
                    #endregion
                }
                return this.mUITxtamountEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtamountEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIOKWindow2 : WinWindow
    {
        
        public UIOKWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnok";
            this.WindowTitles.Add("Withdraw");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "Ok";
                    this.mUIOKButton.WindowTitles.Add("Withdraw");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITransferWindow : WinWindow
    {
        
        public UITransferWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Transfer";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Transfer");
            #endregion
        }
        
        #region Properties
        public UITxtaccount2Window UITxtaccount2Window
        {
            get
            {
                if ((this.mUITxtaccount2Window == null))
                {
                    this.mUITxtaccount2Window = new UITxtaccount2Window(this);
                }
                return this.mUITxtaccount2Window;
            }
        }
        
        public UITransferClient UITransferClient
        {
            get
            {
                if ((this.mUITransferClient == null))
                {
                    this.mUITransferClient = new UITransferClient(this);
                }
                return this.mUITransferClient;
            }
        }
        
        public UITxtamountWindow2 UITxtamountWindow
        {
            get
            {
                if ((this.mUITxtamountWindow == null))
                {
                    this.mUITxtamountWindow = new UITxtamountWindow2(this);
                }
                return this.mUITxtamountWindow;
            }
        }
        
        public UIOKWindow3 UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow3(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITxtaccount2Window mUITxtaccount2Window;
        
        private UITransferClient mUITransferClient;
        
        private UITxtamountWindow2 mUITxtamountWindow;
        
        private UIOKWindow3 mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITxtaccount2Window : WinWindow
    {
        
        public UITxtaccount2Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtaccount2";
            this.WindowTitles.Add("Transfer");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtaccount2Edit
        {
            get
            {
                if ((this.mUITxtaccount2Edit == null))
                {
                    this.mUITxtaccount2Edit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtaccount2Edit.SearchProperties[WinEdit.PropertyNames.Name] = "Transfer to:";
                    this.mUITxtaccount2Edit.WindowTitles.Add("Transfer");
                    #endregion
                }
                return this.mUITxtaccount2Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtaccount2Edit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITransferClient : WinClient
    {
        
        public UITransferClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Transfer";
            this.WindowTitles.Add("Transfer");
            #endregion
        }
        
        #region Properties
        public WinWindow UITxtamountWindow
        {
            get
            {
                if ((this.mUITxtamountWindow == null))
                {
                    this.mUITxtamountWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUITxtamountWindow.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "210";
                    this.mUITxtamountWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
                    this.mUITxtamountWindow.WindowTitles.Add("Transfer");
                    #endregion
                }
                return this.mUITxtamountWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUITxtamountWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITxtamountWindow2 : WinWindow
    {
        
        public UITxtamountWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtamount";
            this.WindowTitles.Add("Transfer");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtamountEdit
        {
            get
            {
                if ((this.mUITxtamountEdit == null))
                {
                    this.mUITxtamountEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtamountEdit.SearchProperties[WinEdit.PropertyNames.Name] = "210";
                    this.mUITxtamountEdit.WindowTitles.Add("Transfer");
                    #endregion
                }
                return this.mUITxtamountEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtamountEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIOKWindow3 : WinWindow
    {
        
        public UIOKWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnok";
            this.WindowTitles.Add("Transfer");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "Ok";
                    this.mUIOKButton.WindowTitles.Add("Transfer");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIRegistrationFormWindow : WinWindow
    {
        
        public UIRegistrationFormWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Registration Form";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Registration Form");
            #endregion
        }
        
        #region Properties
        public UITxtAcctNoWindow UITxtAcctNoWindow
        {
            get
            {
                if ((this.mUITxtAcctNoWindow == null))
                {
                    this.mUITxtAcctNoWindow = new UITxtAcctNoWindow(this);
                }
                return this.mUITxtAcctNoWindow;
            }
        }
        
        public UITxtPincodeWindow UITxtPincodeWindow
        {
            get
            {
                if ((this.mUITxtPincodeWindow == null))
                {
                    this.mUITxtPincodeWindow = new UITxtPincodeWindow(this);
                }
                return this.mUITxtPincodeWindow;
            }
        }
        
        public UITxtAccountNameWindow UITxtAccountNameWindow
        {
            get
            {
                if ((this.mUITxtAccountNameWindow == null))
                {
                    this.mUITxtAccountNameWindow = new UITxtAccountNameWindow(this);
                }
                return this.mUITxtAccountNameWindow;
            }
        }
        
        public UIRegistrationFormClient UIRegistrationFormClient
        {
            get
            {
                if ((this.mUIRegistrationFormClient == null))
                {
                    this.mUIRegistrationFormClient = new UIRegistrationFormClient(this);
                }
                return this.mUIRegistrationFormClient;
            }
        }
        
        public UICancelWindow UICancelWindow
        {
            get
            {
                if ((this.mUICancelWindow == null))
                {
                    this.mUICancelWindow = new UICancelWindow(this);
                }
                return this.mUICancelWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITxtAcctNoWindow mUITxtAcctNoWindow;
        
        private UITxtPincodeWindow mUITxtPincodeWindow;
        
        private UITxtAccountNameWindow mUITxtAccountNameWindow;
        
        private UIRegistrationFormClient mUIRegistrationFormClient;
        
        private UICancelWindow mUICancelWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITxtAcctNoWindow : WinWindow
    {
        
        public UITxtAcctNoWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtAcctNo";
            this.WindowTitles.Add("Registration Form");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtAcctNoEdit
        {
            get
            {
                if ((this.mUITxtAcctNoEdit == null))
                {
                    this.mUITxtAcctNoEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtAcctNoEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Account Number:";
                    this.mUITxtAcctNoEdit.WindowTitles.Add("Registration Form");
                    #endregion
                }
                return this.mUITxtAcctNoEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtAcctNoEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITxtPincodeWindow : WinWindow
    {
        
        public UITxtPincodeWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtPincode";
            this.WindowTitles.Add("Registration Form");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtPincodeEdit
        {
            get
            {
                if ((this.mUITxtPincodeEdit == null))
                {
                    this.mUITxtPincodeEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtPincodeEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Password:";
                    this.mUITxtPincodeEdit.WindowTitles.Add("Registration Form");
                    #endregion
                }
                return this.mUITxtPincodeEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtPincodeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITxtAccountNameWindow : WinWindow
    {
        
        public UITxtAccountNameWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtAccountName";
            this.WindowTitles.Add("Registration Form");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtAccountNameEdit
        {
            get
            {
                if ((this.mUITxtAccountNameEdit == null))
                {
                    this.mUITxtAccountNameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtAccountNameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Account Name:";
                    this.mUITxtAccountNameEdit.WindowTitles.Add("Registration Form");
                    #endregion
                }
                return this.mUITxtAccountNameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtAccountNameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIRegistrationFormClient : WinClient
    {
        
        public UIRegistrationFormClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Registration Form";
            this.WindowTitles.Add("Registration Form");
            #endregion
        }
        
        #region Properties
        public WinWindow UIAccountInfoWindow
        {
            get
            {
                if ((this.mUIAccountInfoWindow == null))
                {
                    this.mUIAccountInfoWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUIAccountInfoWindow.SearchProperties[WinWindow.PropertyNames.Name] = "AccountInfo";
                    this.mUIAccountInfoWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
                    this.mUIAccountInfoWindow.WindowTitles.Add("Registration Form");
                    #endregion
                }
                return this.mUIAccountInfoWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUIAccountInfoWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UICancelWindow : WinWindow
    {
        
        public UICancelWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "Button1";
            this.WindowTitles.Add("Registration Form");
            #endregion
        }
        
        #region Properties
        public WinButton UICancelButton
        {
            get
            {
                if ((this.mUICancelButton == null))
                {
                    this.mUICancelButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICancelButton.SearchProperties[WinButton.PropertyNames.Name] = "Cancel";
                    this.mUICancelButton.WindowTitles.Add("Registration Form");
                    #endregion
                }
                return this.mUICancelButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICancelButton;
        #endregion
    }
}
